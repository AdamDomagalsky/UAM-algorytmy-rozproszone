
atomic void Pokaz(string S) 
{
  cout<<which_proc()<<": "<<S<<endl;
}

monitor ProducentKonsument {

	const int rozmiar_buf=50; 
	int buf[rozmiar_buf];
	int buf_czyt=0;
	int buf_pisz=0;

	int N;

	condition Pelne;
	condition Puste;

	void Produkuj()
	{
	  int el; string[50] str;
	  el=random(1000);

	  sprintf(str,"produkuje %d; buf_pisz=%d, buf_czyt=%d",
		el,buf_pisz,buf_czyt);
	  Pokaz(str);

	  buf[buf_pisz]=el;
	  buf_pisz++;
	  if(buf_pisz>=rozmiar_buf) exit(1);
	}

	void Konsumuj()
	{
	  int el; string[50] str;
	  el=buf[buf_czyt];

	  sprintf(str,"konsumuje %d; buf_pisz=%d, buf_czyt=%d",
		el,buf_pisz,buf_czyt);
	  Pokaz(str);

	  buf_czyt++;
	  if(buf_czyt>=rozmiar_buf) exit(1);
	}

	void dodajDoBufora()
 	{
	  if (N == rozmiar_buf) waitc(Pelne);        
	  Produkuj();                  
	  N = N + 1;                 
	  if (N == 1)  signalc(Puste);    
	}

	void usunZBufora()
	{
	  if (N == 0)  waitc(Puste);      
	  Konsumuj();           
	  N = N - 1;                
	  if (N == rozmiar_buf-1)  signalc(Pelne);  
	}
}
 
void Producent()
{
  while (1)
  {
    dodajDoBufora();         
  }
}

void Konsument()
{
  while (1)
  {
    usunZBufora();   
  }
}

main()
{
  cobegin 
  {
    Konsument();
	Konsument();
    Producent();
  }
}
